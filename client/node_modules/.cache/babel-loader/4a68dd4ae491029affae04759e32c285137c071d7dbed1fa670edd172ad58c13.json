{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pchen\\\\Documents\\\\GitHub\\\\serviceconnect\\\\client\\\\src\\\\Components\\\\ServiceProvider\\\\Bookings\\\\AddService.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport SpNavbar from '../SpNavbar/SpNavbar';\nimport SpSideNavbar from '../SpSideNav/SPSideNavbar';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddService = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  const [serviceTypes, setServiceTypes] = useState([]);\n  const [selectedService, setSelectedService] = useState('');\n  const [selectedServiceType, setSelectedServiceType] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const location = useLocation();\n  const {\n    user\n  } = location.state || {};\n  if (!user) {\n    // Handle case where user details are not available\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User details not available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n  useEffect(() => {\n    // Fetch initial services list\n    axios.get('/api/services').then(response => {\n      setServices(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    // Fetch service types based on selected service\n    if (selectedService) {\n      axios.get(`/api/servicetypes/${selectedService}`).then(response => {\n        setServiceTypes(response.data);\n      });\n    }\n  }, [selectedService]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/servicecatalog', {\n        Service_Id: selectedService,\n        Service_Type_ID: selectedServiceType,\n        Service_Provider_ID: userId,\n        Price: price,\n        Description: description\n      });\n      alert('Service added successfully!');\n      // Reset form or redirect as needed\n    } catch (error) {\n      console.error('Error adding service:', error);\n      alert('Failed to add service');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpNavbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SpSideNavbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-service-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedService,\n        onChange: e => setSelectedService(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: service.Service_Id,\n          children: service.Service_Name\n        }, service.Service_Id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedServiceType,\n        onChange: e => setSelectedServiceType(e.target.value),\n        disabled: !selectedService,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Service Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), serviceTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type.Service_Type_ID,\n          children: type.Service_Type\n        }, type.Service_Type_ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        placeholder: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AddService, \"5/IpvI/tjTTLM9eDy3KSbAxxxm8=\", false, function () {\n  return [useLocation];\n});\n_c = AddService;\nexport default AddService;\nvar _c;\n$RefreshReg$(_c, \"AddService\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","SpNavbar","SpSideNavbar","useLocation","jsxDEV","_jsxDEV","AddService","_s","services","setServices","serviceTypes","setServiceTypes","selectedService","setSelectedService","selectedServiceType","setSelectedServiceType","price","setPrice","description","setDescription","location","user","state","children","fileName","_jsxFileName","lineNumber","columnNumber","get","then","response","data","handleSubmit","e","preventDefault","post","Service_Id","Service_Type_ID","Service_Provider_ID","userId","Price","Description","alert","error","console","username","onSubmit","className","value","onChange","target","map","service","Service_Name","disabled","type","Service_Type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/pchen/Documents/GitHub/serviceconnect/client/src/Components/ServiceProvider/Bookings/AddService.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport SpNavbar from '../SpNavbar/SpNavbar';\r\nimport SpSideNavbar from '../SpSideNav/SPSideNavbar';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst AddService = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [serviceTypes, setServiceTypes] = useState([]);\r\n  const [selectedService, setSelectedService] = useState('');\r\n  const [selectedServiceType, setSelectedServiceType] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const location = useLocation();\r\n  const { user } = location.state || {};\r\n\r\n  if (!user) {\r\n    // Handle case where user details are not available\r\n    return (\r\n      <div>\r\n        <p>User details not available.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Fetch initial services list\r\n    axios.get('/api/services').then(response => {\r\n      setServices(response.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch service types based on selected service\r\n    if (selectedService) {\r\n      axios.get(`/api/servicetypes/${selectedService}`).then(response => {\r\n        setServiceTypes(response.data);\r\n      });\r\n    }\r\n  }, [selectedService]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/servicecatalog', {\r\n        Service_Id: selectedService,\r\n        Service_Type_ID: selectedServiceType,\r\n        Service_Provider_ID: userId,\r\n        Price: price,\r\n        Description: description\r\n      });\r\n      alert('Service added successfully!');\r\n      // Reset form or redirect as needed\r\n    } catch (error) {\r\n      console.error('Error adding service:', error);\r\n      alert('Failed to add service');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <SpNavbar user={user} />\r\n    <SpSideNavbar user={user} />\r\n    <p>{user.username}</p>\r\n    <form onSubmit={handleSubmit} className=\"add-service-form\">\r\n      <select value={selectedService} onChange={e => setSelectedService(e.target.value)}>\r\n        <option value=\"\">Select Service</option>\r\n        {services.map(service => (\r\n          <option key={service.Service_Id} value={service.Service_Id}>{service.Service_Name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <select value={selectedServiceType} onChange={e => setSelectedServiceType(e.target.value)} disabled={!selectedService}>\r\n        <option value=\"\">Select Service Type</option>\r\n        {serviceTypes.map(type => (\r\n          <option key={type.Service_Type_ID} value={type.Service_Type_ID}>{type.Service_Type}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <input type=\"text\" value={price} onChange={e => setPrice(e.target.value)} placeholder=\"Price\" />\r\n      <textarea value={description} onChange={e => setDescription(e.target.value)} placeholder=\"Description\"></textarea>\r\n      <button type=\"submit\">Add Service</button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}