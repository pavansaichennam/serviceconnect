{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pchen\\\\Documents\\\\GitHub\\\\serviceconnect\\\\client\\\\src\\\\Components\\\\ServiceProvider\\\\Bookings\\\\ModifyService.js\",\n  _s = $RefreshSig$();\n// ModifyService.js\n\nimport React, { useContext } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport SpNavbar from '../SpNavbar/SpNavbar';\nimport SpSideNavbar from '../SpSideNav/SPSideNavbar';\nimport './ModifyService.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModifyService = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    user\n  } = location.state || {};\n  const serviceId = location.state.serviceId;\n\n  // Redirect to login if there is no logged in user\n  if (!user) {\n    navigate('/login');\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modify-service-page\",\n    children: [/*#__PURE__*/_jsxDEV(SpNavbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpSideNavbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modify-service-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Modify Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Service ID: \", serviceId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ModifyService, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ModifyService;\nexport default ModifyService;\nvar _c;\n$RefreshReg$(_c, \"ModifyService\");","map":{"version":3,"names":["React","useContext","useNavigate","useParams","useLocation","SpNavbar","SpSideNavbar","jsxDEV","_jsxDEV","ModifyService","_s","navigate","location","user","state","serviceId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/pchen/Documents/GitHub/serviceconnect/client/src/Components/ServiceProvider/Bookings/ModifyService.js"],"sourcesContent":["// ModifyService.js\r\n\r\nimport React, { useContext } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport SpNavbar from '../SpNavbar/SpNavbar';\r\nimport SpSideNavbar from '../SpSideNav/SPSideNavbar';\r\nimport './ModifyService.css';\r\n\r\nconst ModifyService = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { user } = location.state || {};\r\n    const serviceId = location.state.serviceId;\r\n\r\n  // Redirect to login if there is no logged in user\r\n  if (!user) {\r\n    navigate('/login');\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"modify-service-page\">\r\n      <SpNavbar user={user} />\r\n      <SpSideNavbar user={user} />\r\n      <div className=\"modify-service-content\">\r\n        <h1>Modify Service</h1>\r\n        <p>Service ID: {serviceId}</p>\r\n        <p>User ID: { user.id }</p>\r\n        {/* Additional fields and form to modify service details */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModifyService;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAK,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAGH,QAAQ,CAACE,KAAK,CAACC,SAAS;;EAE5C;EACA,IAAI,CAACF,IAAI,EAAE;IACTF,QAAQ,CAAC,QAAQ,CAAC;IAClB,OAAO,IAAI;EACb;EAEA,oBACEH,OAAA;IAAKQ,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCT,OAAA,CAACH,QAAQ;MAACQ,IAAI,EAAEA;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBb,OAAA,CAACF,YAAY;MAACO,IAAI,EAAEA;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5Bb,OAAA;MAAKQ,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCT,OAAA;QAAAS,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBb,OAAA;QAAAS,QAAA,GAAG,cAAY,EAACF,SAAS;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9Bb,OAAA;QAAAS,QAAA,GAAG,WAAS,EAAEJ,IAAI,CAACS,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAxBID,aAAa;EAAA,QACEP,WAAW,EACXE,WAAW;AAAA;AAAAmB,EAAA,GAF1Bd,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}