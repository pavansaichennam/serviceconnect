{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pchen\\\\Documents\\\\GitHub\\\\serviceconnect\\\\client\\\\src\\\\Components\\\\ServiceProvider\\\\Bookings\\\\ModifyService.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport SpNavbar from '../SpNavbar/SpNavbar';\nimport SpSideNavbar from '../SpSideNav/SPSideNavbar';\nimport './ModifyService.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModifyService = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    serviceCatalogId\n  } = useParams();\n  const {\n    user\n  } = useLocation().state || {};\n  const [serviceDetails, setServiceDetails] = useState({});\n  const [serviceTypes, setServiceTypes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchServiceDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/servicecatalog/${serviceCatalogId}`);\n        setServiceDetails(response.data);\n        const serviceTypesResponse = await axios.get(`http://localhost:5000/api/servicetypes/${response.data.Service_Id}`);\n        setServiceTypes(serviceTypesResponse.data);\n      } catch (error) {\n        console.error('Error fetching service details:', error);\n        navigate('/error'); // Navigate to an error page or handle error\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (user && serviceCatalogId) {\n      fetchServiceDetails();\n    } else {\n      navigate('/login'); // Redirect to login if user is not defined\n    }\n  }, [navigate, serviceCatalogId, user]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  const handlePriceChange = e => {\n    setServiceDetails({\n      ...serviceDetails,\n      Price: e.target.value\n    });\n  };\n  const handleServiceTypeChange = e => {\n    setServiceDetails({\n      ...serviceDetails,\n      Service_Type_ID: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:5000/api/servicecatalog/${serviceCatalogId}`, serviceDetails);\n      alert('Service updated successfully!');\n      navigate('/list-services'); // Redirect back to the service list or another appropriate page\n    } catch (error) {\n      console.error('Error updating service:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpNavbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpSideNavbar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modify-service-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Modify Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Service Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: serviceDetails.Service_Name,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Service Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: serviceDetails.Service_Type_ID,\n            onChange: handleServiceTypeChange,\n            children: serviceTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type.Service_Type_ID,\n              children: type.Service_Type\n            }, type.Service_Type_ID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: serviceDetails.Price,\n            onChange: handlePriceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ModifyService, \"RUbs1KDqtyl24ldJ4pgvyQ2oXuY=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ModifyService;\nexport default ModifyService;\nvar _c;\n$RefreshReg$(_c, \"ModifyService\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useLocation","axios","SpNavbar","SpSideNavbar","jsxDEV","_jsxDEV","ModifyService","_s","navigate","serviceCatalogId","user","state","serviceDetails","setServiceDetails","serviceTypes","setServiceTypes","isLoading","setIsLoading","fetchServiceDetails","response","get","data","serviceTypesResponse","Service_Id","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","handlePriceChange","e","Price","target","value","handleServiceTypeChange","Service_Type_ID","handleSubmit","preventDefault","put","alert","className","onSubmit","type","Service_Name","disabled","onChange","map","Service_Type","_c","$RefreshReg$"],"sources":["C:/Users/pchen/Documents/GitHub/serviceconnect/client/src/Components/ServiceProvider/Bookings/ModifyService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SpNavbar from '../SpNavbar/SpNavbar';\r\nimport SpSideNavbar from '../SpSideNav/SPSideNavbar';\r\nimport './ModifyService.css';\r\n\r\nconst ModifyService = () => {\r\n  const navigate = useNavigate();\r\n  const { serviceCatalogId } = useParams();\r\n  const { user } = useLocation().state || {};\r\n  const [serviceDetails, setServiceDetails] = useState({});\r\n  const [serviceTypes, setServiceTypes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchServiceDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/servicecatalog/${serviceCatalogId}`);\r\n        setServiceDetails(response.data);\r\n        const serviceTypesResponse = await axios.get(`http://localhost:5000/api/servicetypes/${response.data.Service_Id}`);\r\n        setServiceTypes(serviceTypesResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching service details:', error);\r\n        navigate('/error'); // Navigate to an error page or handle error\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (user && serviceCatalogId) {\r\n      fetchServiceDetails();\r\n    } else {\r\n      navigate('/login'); // Redirect to login if user is not defined\r\n    }\r\n  }, [navigate, serviceCatalogId, user]);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const handlePriceChange = (e) => {\r\n    setServiceDetails({ ...serviceDetails, Price: e.target.value });\r\n  };\r\n\r\n  const handleServiceTypeChange = (e) => {\r\n    setServiceDetails({ ...serviceDetails, Service_Type_ID: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/servicecatalog/${serviceCatalogId}`, serviceDetails);\r\n      alert('Service updated successfully!');\r\n      navigate('/list-services'); // Redirect back to the service list or another appropriate page\r\n    } catch (error) {\r\n      console.error('Error updating service:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SpNavbar user={user} />\r\n      <SpSideNavbar user={user} />\r\n      <div className=\"modify-service-content\">\r\n        <h1>Modify Service</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Service Name:\r\n            <input type=\"text\" value={serviceDetails.Service_Name} disabled />\r\n          </label>\r\n          <label>\r\n            Service Type:\r\n            <select value={serviceDetails.Service_Type_ID} onChange={handleServiceTypeChange}>\r\n              {serviceTypes.map((type) => (\r\n                <option key={type.Service_Type_ID} value={type.Service_Type_ID}>{type.Service_Type}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Price:\r\n            <input type=\"number\" value={serviceDetails.Price} onChange={handlePriceChange} />\r\n          </label>\r\n          <button type=\"submit\">Save Changes</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModifyService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}